apply from: 'build-modularization.gradle'

buildscript {
    ext {
        //==============================================================================================
        // Versions - Application
        //==============================================================================================
        KOTLIN_VERSION = '1.3.61'
        KOTLIN_COROUTINES_CORE = '1.3.2'

        ANDROID_BUILD_TOOLS = '3.6.1'
        ANDROID_APCOMPACT = '1.1.0'
        ANDROID_LIFECYCLE = '2.3.0'
        ANDROID_LIFECYCLE_EXTENSION = '2.2.0'

        VIEW_MATERIAL_DESIGN = '1.1.0-alpha09'
        VIEW_SWIPE_REFRESH = '1.1.0-alpha03'
        VIEW_CONSTRAINT_LAYOUT = '2.0.4'
        VIEW_RECYCLER_VIEW = '1.1.0'

        GOOGLE_GSON = '2.8.6'
        GOOGLE_ROOM = '2.2.6'
        GOOGLE_NAVIGATION_VERSION = '2.3.3'

        OKHTTP = '4.9.1'
        KOIN = '2.2.2'
        RETROFIT = '2.9.0'
        TRUE_TIME = '3.4'

        MCTECH_KEYBOARD = '1.0.6'
        MCTECH_MVVM_ARCHITECTURE = '1.5.3'
        MCTECH_ARCHITECTUER_GENERATOR = '2.0.0'

        //==============================================================================================
        // Versions - Tests
        //==============================================================================================
        JUNIT = '4.13.2'
        ANDROID_CORE = '1.0.0'
        ANDROID_RUNNER = '1.3.0'
        ANDROID_ARCHITECTURE = '2.1.0'
        NHAARMAN_MOCKITO = '2.1.0'
        ROBOLETRIC = '4.3.1'
        MOCKITO_INLINE = '2.21.0'
        ASSERT_J = '3.11.1'
        COROUTINES = '1.3.1'
        BARISTA = '3.7.0'

        //==============================================================================================
        // SUBMODULES
        //==============================================================================================
        submodulesPlatform = [
                domain: ':domain',
                data  : ':data',
        ]

        submodulesLibraries = [
                networking   : ':libraries:library-networking',
                logger       : ':libraries:library-logger',
                loggerAndroid: ':libraries:library-logger-android',
                designSystem : ':libraries:library-design-system',
                chart        : ':libraries:library-chart',
        ]

        submodulesFeatures = [
                stockShare      : ':features:feature-stock-share',
                stockShareFilter: ':features:feature-stock-share-filter',
                timelineBalance : ':features:feature-timeline-balance',
        ]

        submodulesTest = [
                dataFactory: ':testing:testing-data-factory',
        ]
    }

    repositories {
        google()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$ANDROID_BUILD_TOOLS"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:1.0.0"
        classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
        classpath 'com.adarshr:gradle-test-logger-plugin:2.1.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url "https://jitpack.io"
        }
    }
}


subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            android {
                buildToolsVersion buildTools
                compileSdkVersion compileSdk

                defaultConfig {
                    minSdkVersion minSdk
                    targetSdkVersion targetSdk

                    multiDexEnabled true
                    vectorDrawables.useSupportLibrary = true

                    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
                }

                compileOptions {
                    encoding "utf-8"
                    sourceCompatibility javaVersion
                    targetCompatibility javaVersion
                }

                buildTypes {
                    release {
                        minifyEnabled false
                    }
                    debug {
                        minifyEnabled false
                    }
                }

                lintOptions {
                    abortOnError false
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


apply plugin: "com.vanniktech.android.junit.jacoco"

junitJacoco {
    jacocoVersion = '0.8.5' // type String
}